{"version":3,"file":"section.min.js","sources":["../../../src/local/content/section.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Course section format component.\r\n *\r\n * @module     core_courseformat/local/content/section\r\n * @class      core_courseformat/local/content/section\r\n * @copyright  2021 Ferran Recio <ferran@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport ILD from \"format_mooin1pager/ildhvp4\";\r\nimport Header from 'core_courseformat/local/content/section/header';\r\nimport DndSection from 'core_courseformat/local/courseeditor/dndsection';\r\nimport Templates from 'core/templates';\r\nimport Pending from \"core/pending\";\r\n\r\nexport default class extends DndSection {\r\n\r\n    /**\r\n     * Constructor hook.\r\n     */\r\n    create() {\r\n        // Optional component name for debugging.\r\n        this.name = 'content_section';\r\n        // Default query selectors.\r\n        this.selectors = {\r\n            ACTIONMENU: '.section-actions',\r\n            SECTION_ITEM: `[data-for='section_title']`,\r\n            CM: `[data-for=\"cmitem\"]`,\r\n            SECTIONINFO: `[data-for=\"sectioninfo\"]`,\r\n            SECTIONBADGES: `[data-region=\"sectionbadges\"]`,\r\n            SHOWSECTION: `[data-action=\"sectionShow\"]`,\r\n            HIDESECTION: `[data-action=\"sectionHide\"]`,\r\n            ACTIONTEXT: `.menu-action-text`,\r\n            ICON: `.icon`,\r\n        };\r\n        // Most classes will be loaded later by DndCmItem.\r\n        this.classes = {\r\n            LOCKED: 'editinprogress',\r\n            HASDESCRIPTION: 'description',\r\n            HIDE: 'd-none',\r\n            HIDDEN: 'hidden',\r\n            CURRENT: 'current',\r\n        };\r\n\r\n        // We need our id to watch specific events.\r\n        this.id = this.element.dataset.id;\r\n    }\r\n\r\n    /**\r\n     * Initial state ready method.\r\n     *\r\n     * @param {Object} state the initial state\r\n     */\r\n    stateReady(state) {\r\n        this.configState(state);\r\n        // Drag and drop is only available for components compatible course formats.\r\n        if (this.reactive.isEditing && this.reactive.supportComponents) {\r\n            // Section zero and other formats sections may not have a title to drag.\r\n            const sectionItem = this.getElement(this.selectors.SECTION_ITEM);\r\n            if (sectionItem) {\r\n                // Init the inner dragable element.\r\n                const headerComponent = new Header({\r\n                    ...this,\r\n                    element: sectionItem,\r\n                    fullregion: this.element,\r\n                });\r\n                this.configDragDrop(headerComponent);\r\n            }\r\n        }\r\n        this._openSectionIfNecessary();\r\n    }\r\n\r\n    /**\r\n     * Open the section if the anchored activity is inside.\r\n     */\r\n    async _openSectionIfNecessary() {\r\n        const pageCmInfo = this.reactive.getPageAnchorCmInfo();\r\n        if (!pageCmInfo || pageCmInfo.sectionid !== this.id) {\r\n            return;\r\n        }\r\n        await this.reactive.dispatch('sectionContentCollapsed', [this.id], false);\r\n        const pendingOpen = new Pending(`courseformat/section:openSectionIfNecessary`);\r\n        this.element.scrollIntoView({block: \"center\"});\r\n        setTimeout(() => {\r\n            this.reactive.dispatch('setPageItem', 'cm', pageCmInfo.id);\r\n            pendingOpen.resolve();\r\n        }, 250);\r\n    }\r\n\r\n    /**\r\n     * Component watchers.\r\n     *\r\n     * @returns {Array} of watchers\r\n     */\r\n    getWatchers() {\r\n        return [\r\n            {watch: `section[${this.id}]:updated`, handler: this._refreshSection},\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * Validate if the drop data can be dropped over the component.\r\n     *\r\n     * @param {Object} dropdata the exported drop data.\r\n     * @returns {boolean}\r\n     */\r\n    validateDropData(dropdata) {\r\n        // If the format uses one section per page sections dropping in the content is ignored.\r\n        if (dropdata?.type === 'section' && this.reactive.sectionReturn !== null) {\r\n            return false;\r\n        }\r\n        return super.validateDropData(dropdata);\r\n    }\r\n\r\n    /**\r\n     * Get the last CM element of that section.\r\n     *\r\n     * @returns {element|null}\r\n     */\r\n    getLastCm() {\r\n        const cms = this.getElements(this.selectors.CM);\r\n        // DndUpload may add extra elements so :last-child selector cannot be used.\r\n        if (!cms || cms.length === 0) {\r\n            return null;\r\n        }\r\n        const lastCm = cms[cms.length - 1];\r\n        // If it is a delegated section return the last item overall.\r\n        if (this.section.component !== null) {\r\n            return lastCm;\r\n        }\r\n        // If it is a regular section and the last item overall has a parent cm, return the parent instead.\r\n        const parentSection = lastCm.parentNode.closest(this.selectors.CM);\r\n        return parentSection ?? lastCm;\r\n    }\r\n\r\n    /**\r\n     * Get a fallback element when there is no CM in the section.\r\n     *\r\n     * @returns {element|null} the las course module element of the section.\r\n     */\r\n    getLastCmFallback() {\r\n        // The sectioninfo is always present, even when the section is empty.\r\n        return this.getElement(this.selectors.SECTIONINFO);\r\n    }\r\n\r\n    /**\r\n     * Update a content section using the state information.\r\n     *\r\n     * @param {object} param\r\n     * @param {Object} param.element details the update details.\r\n     */\r\n    _refreshSection({element}) {\r\n        // Update classes.\r\n        this.element.classList.toggle(this.classes.DRAGGING, element.dragging ?? false);\r\n        this.element.classList.toggle(this.classes.LOCKED, element.locked ?? false);\r\n        this.element.classList.toggle(this.classes.HIDDEN, !element.visible ?? false);\r\n        this.element.classList.toggle(this.classes.CURRENT, element.current ?? false);\r\n        this.locked = element.locked;\r\n        // The description box classes depends on the section state.\r\n        const sectioninfo = this.getElement(this.selectors.SECTIONINFO);\r\n        if (sectioninfo) {\r\n            sectioninfo.classList.toggle(this.classes.HASDESCRIPTION, element.hasrestrictions);\r\n        }\r\n        // Update section badges and menus.\r\n        this._updateBadges(element);\r\n        this._updateActionsMenu(element);\r\n    }\r\n\r\n    /**\r\n     * Update a section badges using the state information.\r\n     *\r\n     * @param {object} section the section state.\r\n     */\r\n    _updateBadges(section) {\r\n        const current = this.getElement(`${this.selectors.SECTIONBADGES} [data-type='iscurrent']`);\r\n        current?.classList.toggle(this.classes.HIDE, !section.current);\r\n\r\n        const hiddenFromStudents = this.getElement(`${this.selectors.SECTIONBADGES} [data-type='hiddenfromstudents']`);\r\n        hiddenFromStudents?.classList.toggle(this.classes.HIDE, section.visible);\r\n    }\r\n\r\n    /**\r\n     * Update a section action menus.\r\n     *\r\n     * @param {object} section the section state.\r\n     */\r\n    async _updateActionsMenu(section) {\r\n        let selector;\r\n        let newAction;\r\n        if (section.visible) {\r\n            selector = this.selectors.SHOWSECTION;\r\n            newAction = 'sectionHide';\r\n        } else {\r\n            selector = this.selectors.HIDESECTION;\r\n            newAction = 'sectionShow';\r\n        }\r\n        // Find the affected action.\r\n        const affectedAction = this._getActionMenu(selector);\r\n        if (!affectedAction) {\r\n            return;\r\n        }\r\n        // Change action.\r\n        affectedAction.dataset.action = newAction;\r\n        // Change text.\r\n        const actionText = affectedAction.querySelector(this.selectors.ACTIONTEXT);\r\n        if (affectedAction.dataset?.swapname && actionText) {\r\n            const oldText = actionText?.innerText;\r\n            actionText.innerText = affectedAction.dataset.swapname;\r\n            affectedAction.dataset.swapname = oldText;\r\n        }\r\n        // Change icon.\r\n        const icon = affectedAction.querySelector(this.selectors.ICON);\r\n        if (affectedAction.dataset?.swapicon && icon) {\r\n            const newIcon = affectedAction.dataset.swapicon;\r\n            affectedAction.dataset.swapicon = affectedAction.dataset.icon;\r\n            affectedAction.dataset.icon = newIcon;\r\n            if (newIcon) {\r\n                const pixHtml = await Templates.renderPix(newIcon, 'core');\r\n                Templates.replaceNode(icon, pixHtml, '');\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the action menu element from the selector.\r\n     *\r\n     * @param {string} selector The selector to find the action menu.\r\n     * @returns The action menu element.\r\n     */\r\n    _getActionMenu(selector) {\r\n        return document.querySelector(`${this.selectors.ACTIONMENU}[data-sectionid='${this.id}'] ${selector}`);\r\n    }\r\n\r\n\r\n  _hvpListener() {\r\n    var h5p_contentIds = [];\r\n    var parentIFrames = this.getElements(this.selectors.H5P);\r\n    //console.log(\"Anzahl der parentIFrames gefunden:\", parentIFrames.length);\r\n    if (parentIFrames.length > 0) {\r\n      parentIFrames.forEach((parentIFrame) => {\r\n        if (parentIFrame.contentDocument) {\r\n          var parentIFrameContent =\r\n            parentIFrame.contentDocument || parentIFrame.contentWindow.document;\r\n          //console.log(\"parentIFrameContent gefunden:\", parentIFrameContent);\r\n\r\n          let nestedIFrame = null;\r\n\r\n          const adjustParentIFrameHeight = () => {\r\n            setTimeout(() => {\r\n              console.log(\"adjustParentIFrameHeight\");\r\n\r\n              if (nestedIFrame && nestedIFrame.contentWindow.document.body) {\r\n                const nestedIFrameHeight =\r\n                  nestedIFrame.contentWindow.document.body.scrollHeight;\r\n                if (nestedIFrameHeight > 1) {\r\n                  parentIFrame.style.height = nestedIFrameHeight + \"px\";\r\n                  // console.log(\r\n                  //     \"ParentIFrame-Höhe angepasst:\",\r\n                  //     nestedIFrameHeight + \"px\"\r\n                  // );\r\n                } else {\r\n                  //console.log(\"Inhalt noch nicht vollständig gerendert, Höhe nicht angepasst.\");\r\n                }\r\n              } else {\r\n                //console.log(\"Body ist noch nicht verfügbar.\");\r\n              }\r\n            }, 100);\r\n          };\r\n\r\n          const monitorElementLoads = () => {\r\n            console.log(\"monitorElementLoads\");\r\n\r\n            // Überwache das Laden von Bildern, Videos und anderen Medien im iframe\r\n            const elementsToWatch = ['img', 'video', 'iframe', 'embed', 'object'];\r\n            elementsToWatch.forEach(tag => {\r\n              const elements = nestedIFrame.contentDocument.getElementsByTagName(tag);\r\n              for (let element of elements) {\r\n                element.addEventListener('load', adjustParentIFrameHeight);\r\n                element.addEventListener('resize', adjustParentIFrameHeight);\r\n              }\r\n            });\r\n          };\r\n\r\n          const checkForH5P = () => {\r\n            console.log(\"checkForH5P\");\r\n            if (nestedIFrame) {\r\n              var H5PIntegration = nestedIFrame.contentWindow.H5PIntegration;\r\n              var H5P = nestedIFrame.contentWindow.H5P;\r\n              if (H5P && H5P.externalDispatcher) {\r\n                //console.log(\"H5P-Objekt gefunden.\");\r\n\r\n                //workaround for problem, that several observer regard the same object\r\n                function addUniqueH5PcontentId(array, element) {\r\n                  if (!array.includes(element)) {\r\n                    array.push(element);\r\n                  }\r\n                  return array;\r\n                }\r\n\r\n                //array of h5p contentId\r\n\r\n                H5P.setFinished = function (contentId, score, maxScore, time) {\r\n                  // H5P-Funktion hijacken, damit die Grade nicht doppelt eingetragen wird\r\n                };\r\n\r\n                //H5P.externalDispatcher.on(\"xAPI\", this._hvpprogress.bind(this));\r\n                //ILD.checkLibrary();\r\n                //H5P.externalDispatcher.on(\"xAPI\", ILD.xAPIAnsweredListener);\r\n                if (!h5p_contentIds.includes(H5P.instances[0].contentId)) {\r\n                  var current_array = addUniqueH5PcontentId(h5p_contentIds, H5P.instances[0].contentId);\r\n                  ILD.init(H5P, H5PIntegration, this.id, this.reactive);\r\n                }\r\n                //window.console.log(H5P);\r\n\r\n                adjustParentIFrameHeight(); // Höhe sofort anpassen, wenn H5P gefunden wird\r\n\r\n                // Starte den MutationObserver\r\n                var observer = new MutationObserver(function (mutations) {\r\n                  mutations.forEach(function (mutation) {\r\n                    if (mutation.addedNodes.length > 0 || mutation.attributeName === 'src') {\r\n                      // console.log(\r\n                      //     \"DOM-Änderung oder Attributänderung erkannt im .h5p-iframe: \",\r\n                      //     mutation\r\n                      // );\r\n                      adjustParentIFrameHeight(); // Passe die Höhe nach der Mutation oder Attributänderung an\r\n                    }\r\n                  });\r\n                });\r\n\r\n                observer.observe(nestedIFrame.contentDocument, {\r\n                  childList: true,\r\n                  subtree: true,\r\n                  attributes: true, // Überwacht Änderungen an Attributen wie `src`\r\n                });\r\n                // console.log(\r\n                //     \"MutationObserver wurde gestartet, um Änderungen im .h5p-iframe zu überwachen.\"\r\n                // );\r\n\r\n                return true; // H5P wurde gefunden und alles eingerichtet\r\n              }\r\n            }\r\n            return false; // H5P wurde noch nicht gefunden oder nestedIFrame ist nicht verfügbar\r\n          };\r\n\r\n          const checkForNestedIFrame = () => {\r\n            nestedIFrame = parentIFrameContent.querySelector(\".h5p-iframe\");\r\n            //console.log(\"nestedIFrame gefunden:\", nestedIFrame);\r\n\r\n            if (nestedIFrame) {\r\n              // Füge ein 'load' Event hinzu\r\n              nestedIFrame.addEventListener('load', function () {\r\n                //console.log('.h5p-iframe vollständig geladen.');\r\n                adjustParentIFrameHeight(); // Passe die Höhe an, wenn das iframe vollständig geladen ist\r\n                checkForH5P(); // Prüfe H5P erneut nach dem Laden\r\n                monitorElementLoads(); // Überwache das Laden von Elementen\r\n              });\r\n\r\n              // Fallback: Sofortiger Versuch, H5P zu finden\r\n              if (!checkForH5P()) {\r\n                //console.log(\"H5P wurde nicht gefunden, starte Überwachung.\");\r\n\r\n                // Fallback: Regelmäßige Überprüfung des Inhalts (Polling) für H5P\r\n                var h5pCheckInterval = setInterval(function () {\r\n                  if (checkForH5P()) {\r\n                    clearInterval(h5pCheckInterval); // Stoppe das Intervall, wenn H5P gefunden wurde\r\n                  }\r\n                }, 500); // Überprüft alle 500ms\r\n              }\r\n\r\n              return true; // nestedIFrame wurde gefunden, keine weitere Aktion erforderlich\r\n            }\r\n            return false; // nestedIFrame wurde noch nicht gefunden\r\n          };\r\n\r\n          // Initialer Versuch, nestedIFrame zu finden\r\n          if (!checkForNestedIFrame()) {\r\n            // console.log(\r\n            //     \"nestedIFrame wurde nicht gefunden, starte Beobachtung des parentIFrame.\"\r\n            // );\r\n\r\n            // Beobachte den parentIFrame für das Erscheinen des nestedIFrame\r\n            var observer = new MutationObserver(function (mutations) {\r\n              console.log(\"_hvpListener 7\");\r\n\r\n              mutations.forEach(function (mutation) {\r\n                if (mutation.addedNodes.length > 0) {\r\n                  // console.log(\r\n                  //     \"Eine neue Node wurde hinzugefügt:\",\r\n                  //     mutation.addedNodes\r\n                  // );\r\n                  if (checkForNestedIFrame()) {\r\n                    observer.disconnect(); // Stoppe das Beobachten, nachdem nestedIFrame gefunden wurde\r\n                  }\r\n                }\r\n              });\r\n            });\r\n\r\n            observer.observe(parentIFrameContent, {\r\n              childList: true,\r\n              subtree: true,\r\n            });\r\n          }\r\n        } else {\r\n          //console.error(\"Kein Dokument im parentIFrame gefunden.\");\r\n        }\r\n      });\r\n    } else {\r\n      //console.error(\"Keine parentIFrames gefunden.\");\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // _hvpListener() {\r\n  //   var parentIFrames = this.getElements(this.selectors.H5P);\r\n  //   if (parentIFrames.length > 0) {\r\n  //     parentIFrames.forEach((parentIFrame) => {\r\n  //       if (parentIFrame.contentDocument) {\r\n  //         var parentIFrameContent =\r\n  //           parentIFrame.contentDocument || parentIFrame.contentWindow.document;\r\n\r\n  //         var nestedIFrame = parentIFrameContent.querySelector(\".h5p-iframe\");\r\n\r\n  //         if (nestedIFrame) {\r\n  //           var H5P = nestedIFrame.contentWindow.H5P;\r\n  //           if (H5P && H5P.externalDispatcher) {\r\n\r\n  //             // var nestedIFrameHeight =\r\n  //             // nestedIFrame.contentWindow.document.body.scrollHeight;\r\n  //             // parentIFrame.style.height = nestedIFrameHeight + \"px\";\r\n  //             //ILD.init(H5P);\r\n  //             window.console.log(H5P);\r\n\r\n  //             H5P.setFinished = function (contentId, score, maxScore, time) {\r\n  //              //hvp Funktion hijacken, damit die Grade nicht doppelt eingetragen wird\r\n  //             };\r\n  //             H5P.externalDispatcher.on(\"xAPI\", this._hvpprogress.bind(this));\r\n  //             var instance = H5P.instances[0];\r\n  //             H5P.trigger(instance, 'resize');\r\n  // var nestedIFrameHeight =\r\n  // nestedIFrame.contentWindow.document.body.scrollHeight;\r\n  // parentIFrame.style.height = nestedIFrameHeight + \"px\";\r\n  //           } else {\r\n  //             setTimeout(this._hvpListener.bind(this), 50);\r\n  //           }\r\n  //         } else {\r\n  //           setTimeout(this._hvpListener.bind(this), 50);\r\n  //         }\r\n  //       } else {\r\n  //         setTimeout(this._hvpListener.bind(this), 50);\r\n  //       }\r\n  //     });\r\n  //   }\r\n  // }\r\n\r\n  _hvpprogress(event) {\r\n    window.console.log(event);\r\n\r\n    if (event.getVerb() === \"completed\" || event.getVerb() === \"answered\") {\r\n      var contentId = event.getVerifiedStatementValue([\r\n        \"object\",\r\n        \"definition\",\r\n        \"extensions\",\r\n        \"http://h5p.org/x-api/h5p-local-content-id\",\r\n      ]);\r\n      var score = event.getScore();\r\n      var maxScore = event.getMaxScore();\r\n      var statement = event.data.statement;\r\n      var isChild =\r\n        statement.context &&\r\n        statement.context.contextActivities &&\r\n        statement.context.contextActivities.parent &&\r\n        statement.context.contextActivities.parent[0] &&\r\n        statement.context.contextActivities.parent[0].id;\r\n\r\n\r\n      this.reactive.dispatch(\r\n        \"updateSectionprogress\",\r\n        this.id,\r\n        contentId,\r\n        score,\r\n        maxScore\r\n      );\r\n\r\n    }\r\n  }\r\n}\r\n"],"names":["DndSection","create","name","selectors","ACTIONMENU","SECTION_ITEM","CM","SECTIONINFO","SECTIONBADGES","SHOWSECTION","HIDESECTION","ACTIONTEXT","ICON","classes","LOCKED","HASDESCRIPTION","HIDE","HIDDEN","CURRENT","id","this","element","dataset","stateReady","state","configState","reactive","isEditing","supportComponents","sectionItem","getElement","headerComponent","Header","fullregion","configDragDrop","_openSectionIfNecessary","pageCmInfo","getPageAnchorCmInfo","sectionid","dispatch","pendingOpen","Pending","scrollIntoView","block","setTimeout","resolve","getWatchers","watch","handler","_refreshSection","validateDropData","dropdata","type","sectionReturn","super","getLastCm","cms","getElements","length","lastCm","section","component","parentSection","parentNode","closest","getLastCmFallback","classList","toggle","DRAGGING","dragging","locked","visible","current","sectioninfo","hasrestrictions","_updateBadges","_updateActionsMenu","hiddenFromStudents","selector","newAction","affectedAction","_getActionMenu","action","actionText","querySelector","swapname","oldText","innerText","icon","swapicon","newIcon","pixHtml","Templates","renderPix","replaceNode","document","_hvpListener","h5p_contentIds","parentIFrames","H5P","forEach","parentIFrame","contentDocument","parentIFrameContent","contentWindow","nestedIFrame","adjustParentIFrameHeight","console","log","body","nestedIFrameHeight","scrollHeight","style","height","monitorElementLoads","tag","elements","getElementsByTagName","addEventListener","checkForH5P","H5PIntegration","externalDispatcher","setFinished","contentId","score","maxScore","time","includes","instances","array","push","init","MutationObserver","mutations","mutation","addedNodes","attributeName","observe","childList","subtree","attributes","checkForNestedIFrame","h5pCheckInterval","setInterval","clearInterval","observer","disconnect","_hvpprogress","event","window","getVerb","getVerifiedStatementValue","getScore","getMaxScore","statement","data","context","contextActivities","parent"],"mappings":"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"}