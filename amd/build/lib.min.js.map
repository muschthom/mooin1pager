{"version":3,"file":"lib.min.js","sources":["../src/lib.js"],"sourcesContent":["define(['jquery', 'core/ajax', 'core/notification', 'format_mooin1pager/ildhvp4', 'format_mooin1pager/udateprogressbar'], function ($, Ajax, Notification, ILD, Update) {\r\n\r\n    function hvpListener() {\r\n        console.log(\"HVP Listener gestartet\");\r\n\r\n        const h5p_contentIds = [];\r\n        const parentIFrames = document.querySelectorAll('iframe');\r\n\r\n        parentIFrames.forEach(parentIFrame => {\r\n            try {\r\n                const doc = parentIFrame.contentDocument || parentIFrame.contentWindow.document;\r\n                let nestedIFrame = null;\r\n\r\n                // Höhe des H5P-iFrames anpassen\r\n                const adjustParentIFrameHeight = () => {\r\n                    setTimeout(() => {\r\n                        if (nestedIFrame?.contentWindow?.document?.body) {\r\n                            const nestedHeight = nestedIFrame.contentWindow.document.body.scrollHeight;\r\n                            if (nestedHeight > 1) {\r\n                                parentIFrame.style.height = nestedHeight + \"px\";\r\n                            }\r\n                        }\r\n                    }, 100);\r\n                };\r\n\r\n                // Media-Elemente innerhalb des H5P-iFrames beobachten\r\n                const monitorElementLoads = () => {\r\n                    ['img', 'video', 'iframe', 'embed', 'object'].forEach(tag => {\r\n                        Array.from(nestedIFrame.contentDocument.getElementsByTagName(tag))\r\n                            .forEach(el => {\r\n                                el.addEventListener('load', adjustParentIFrameHeight);\r\n                                el.addEventListener('resize', adjustParentIFrameHeight);\r\n                            });\r\n                    });\r\n                };\r\n\r\n                // Prüft, ob H5P geladen ist und registriert Listener\r\n                const checkForH5P = () => {\r\n                    nestedIFrame = nestedIFrame || doc.querySelector('.h5p-iframe');\r\n                    if (nestedIFrame?.contentWindow) {\r\n                        const pw = nestedIFrame.contentWindow;\r\n                        if (pw.H5P && pw.H5P.externalDispatcher) {\r\n                            const contentId = pw.H5P.instances[0]?.contentId;\r\n                            if (!h5p_contentIds.includes(contentId)) {\r\n                                h5p_contentIds.push(contentId);\r\n                                // Optionale Initialisierung: ILD.init(...)\r\n                                var H5PIntegration = nestedIFrame.contentWindow.H5PIntegration;\r\n                                var H5P = nestedIFrame.contentWindow.H5P;\r\n                                ILD.init(H5P, H5PIntegration, this.id, this.reactive);\r\n                            }\r\n\r\n                            // H5P Interaction abfangen\r\n                            pw.H5P.externalDispatcher.on('xAPI', event => {\r\n                                //console.log(\"H5P xAPI Event:\", event);\r\n                                const courseId = M.cfg.courseId || document.body.dataset.courseid;\r\n                                Update.updateProgressBar(courseId);\r\n                            });\r\n\r\n                            adjustParentIFrameHeight();\r\n                            monitorElementLoads();\r\n\r\n                            // MutationObserver, um auftretende Änderungen im H5P-Content zu erkennen\r\n                            const observer = new MutationObserver(muts => {\r\n                                muts.forEach(mut => {\r\n                                    if (mut.addedNodes.length || mut.attributeName === 'src') {\r\n                                        adjustParentIFrameHeight();\r\n                                    }\r\n                                });\r\n                            });\r\n                            observer.observe(nestedIFrame.contentDocument, {\r\n                                childList: true,\r\n                                subtree: true,\r\n                                attributes: true\r\n                            });\r\n                            return true;\r\n                        }\r\n                    }\r\n                    return false;\r\n                };\r\n\r\n                // Prüft existierende H5P-iFrames\r\n                const initOnce = () => {\r\n                    if (!checkForH5P()) {\r\n                        const outerObserver = new MutationObserver(muts => {\r\n                            muts.forEach(mut => {\r\n                                if (mut.addedNodes.length && checkForH5P()) {\r\n                                    outerObserver.disconnect();\r\n                                }\r\n                            });\r\n                        });\r\n                        outerObserver.observe(doc.body, { childList: true, subtree: true });\r\n                    }\r\n                };\r\n\r\n                initOnce();\r\n            } catch (err) {\r\n                console.error(\"Fehler in HVP Listener:\", err);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    return {\r\n        hvpListener: hvpListener\r\n    };\r\n});"],"names":["define","$","Ajax","Notification","ILD","Update","hvpListener","console","log","h5p_contentIds","document","querySelectorAll","forEach","parentIFrame","doc","contentDocument","contentWindow","nestedIFrame","adjustParentIFrameHeight","setTimeout","_nestedIFrame","_nestedIFrame$content","_nestedIFrame$content2","body","nestedHeight","scrollHeight","style","height","monitorElementLoads","tag","Array","from","getElementsByTagName","el","addEventListener","checkForH5P","querySelector","_nestedIFrame2","pw","H5P","externalDispatcher","contentId","instances","_pw$H5P$instances$","includes","push","H5PIntegration","init","this","id","reactive","on","event","courseId","M","cfg","dataset","courseid","updateProgressBar","MutationObserver","muts","mut","addedNodes","length","attributeName","observe","childList","subtree","attributes","outerObserver","disconnect","initOnce","err","error"],"mappings":"AAAAA,gCAAO,CAAC,SAAU,YAAa,oBAAqB,6BAA8B,wCAAwC,SAAUC,EAAGC,KAAMC,aAAcC,IAAKC,cAsGrJ,CACHC,uBApGAC,QAAQC,IAAI,gCAENC,eAAiB,GACDC,SAASC,iBAAiB,UAElCC,SAAQC,yBAERC,IAAMD,aAAaE,iBAAmBF,aAAaG,cAAcN,aACnEO,aAAe,WAGbC,yBAA2B,KAC7BC,YAAW,6FACHF,qEAAAG,cAAcJ,+EAAdK,sBAA6BX,4CAA7BY,uBAAuCC,KAAM,OACvCC,aAAeP,aAAaD,cAAcN,SAASa,KAAKE,aAC1DD,aAAe,IACfX,aAAaa,MAAMC,OAASH,aAAe,SAGpD,MAIDI,oBAAsB,MACvB,MAAO,QAAS,SAAU,QAAS,UAAUhB,SAAQiB,MAClDC,MAAMC,KAAKd,aAAaF,gBAAgBiB,qBAAqBH,MACxDjB,SAAQqB,KACLA,GAAGC,iBAAiB,OAAQhB,0BAC5Be,GAAGC,iBAAiB,SAAUhB,iCAMxCiB,YAAc,2BAChBlB,aAAeA,cAAgBH,IAAIsB,cAAc,sCAC7CnB,wCAAAoB,eAAcrB,cAAe,OACvBsB,GAAKrB,aAAaD,iBACpBsB,GAAGC,KAAOD,GAAGC,IAAIC,mBAAoB,8BAC/BC,qCAAYH,GAAGC,IAAIG,UAAU,wCAAjBC,mBAAqBF,cAClChC,eAAemC,SAASH,WAAY,CACrChC,eAAeoC,KAAKJ,eAEhBK,eAAiB7B,aAAaD,cAAc8B,eAC5CP,IAAMtB,aAAaD,cAAcuB,IACrCnC,IAAI2C,KAAKR,IAAKO,eAAgBE,KAAKC,GAAID,KAAKE,UAIhDZ,GAAGC,IAAIC,mBAAmBW,GAAG,QAAQC,cAE3BC,SAAWC,EAAEC,IAAIF,UAAY3C,SAASa,KAAKiC,QAAQC,SACzDpD,OAAOqD,kBAAkBL,aAG7BnC,2BACAU,6BAGiB,IAAI+B,kBAAiBC,OAClCA,KAAKhD,SAAQiD,OACLA,IAAIC,WAAWC,QAAgC,QAAtBF,IAAIG,gBAC7B9C,iCAIH+C,QAAQhD,aAAaF,gBAAiB,CAC3CmD,WAAW,EACXC,SAAS,EACTC,YAAY,KAET,UAGR,GAIM,UACRjC,cAAe,OACVkC,cAAgB,IAAIV,kBAAiBC,OACvCA,KAAKhD,SAAQiD,MACLA,IAAIC,WAAWC,QAAU5B,eACzBkC,cAAcC,mBAI1BD,cAAcJ,QAAQnD,IAAIS,KAAM,CAAE2C,WAAW,EAAMC,SAAS,MAIpEI,GACF,MAAOC,KACLjE,QAAQkE,MAAM,0BAA2BD"}