{"version":3,"file":"section.min.js","sources":["../src/section.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Format mooin1pager section extra logic component.\r\n *\r\n * @module     format_mooin1pager/section\r\n * @copyright  2022 Ferran Recio <ferran@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport { BaseComponent } from 'core/reactive';\r\nimport { getCurrentCourseEditor } from 'core_courseformat/courseeditor';\r\nimport Templates from 'core/templates';\r\nimport ILD from \"format_mooin1pager/ildhvp4\";\r\n\r\n\r\nclass HighlightSection extends BaseComponent {\r\n\r\n    /**\r\n     * Constructor hook.\r\n     */\r\n    create() {\r\n        // Optional component name for debugging.\r\n        this.name = 'format_mooin1pager_section';\r\n        // Default query selectors.\r\n        this.selectors = {\r\n            SETMARKER: `[data-action=\"sectionHighlight\"]`,\r\n            REMOVEMARKER: `[data-action=\"sectionUnhighlight\"]`,\r\n            ACTIONTEXT: `.menu-action-text`,\r\n            ICON: `.icon`,\r\n        };\r\n        // Default classes to toggle on refresh.\r\n        this.classes = {\r\n            HIDE: 'd-none',\r\n        };\r\n        // The mooin1pager format section specific actions.\r\n        this.formatActions = {\r\n            HIGHLIGHT: 'sectionHighlight',\r\n            UNHIGHLIGHT: 'sectionUnhighlight',\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Component watchers.\r\n     *\r\n     * @returns {Array} of watchers\r\n     */\r\n    getWatchers() {\r\n        return [\r\n            { watch: `section.current:updated`, handler: this._refreshHighlight },\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * Update a content section using the state information.\r\n     *\r\n     * @param {object} param\r\n     * @param {Object} param.element details the update details.\r\n     */\r\n    async _refreshHighlight({ element }) {\r\n        let selector;\r\n        let newAction;\r\n        if (element.current) {\r\n            selector = this.selectors.SETMARKER;\r\n            newAction = this.formatActions.UNHIGHLIGHT;\r\n        } else {\r\n            selector = this.selectors.REMOVEMARKER;\r\n            newAction = this.formatActions.HIGHLIGHT;\r\n        }\r\n        // Find the affected action.\r\n        const affectedAction = this.getElement(`${selector}`, element.id);\r\n        if (!affectedAction) {\r\n            return;\r\n        }\r\n        // Change action, text and icon.\r\n        affectedAction.dataset.action = newAction;\r\n        const actionText = affectedAction.querySelector(this.selectors.ACTIONTEXT);\r\n        if (affectedAction.dataset?.swapname && actionText) {\r\n            const oldText = actionText?.innerText;\r\n            actionText.innerText = affectedAction.dataset.swapname;\r\n            affectedAction.dataset.swapname = oldText;\r\n        }\r\n        const icon = affectedAction.querySelector(this.selectors.ICON);\r\n        if (affectedAction.dataset?.swapicon && icon) {\r\n            const newIcon = affectedAction.dataset.swapicon;\r\n            if (newIcon) {\r\n                const pixHtml = await Templates.renderPix(newIcon, 'core');\r\n                Templates.replaceNode(icon, pixHtml, '');\r\n                affectedAction.dataset.swapicon = affectedAction.dataset.icon;\r\n                affectedAction.dataset.icon = newIcon;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Initial state ready method.\r\n     *\r\n     * @param {Object} state the initial state\r\n */\r\n    stateReady(state) {\r\n        this._hvpListener();\r\n    }\r\n\r\n    _hvpListener() {\r\n        var h5p_contentIds = [];\r\n        var parentIFrames = this.getElements(this.selectors.H5P);\r\n        //console.log(\"Anzahl der parentIFrames gefunden:\", parentIFrames.length);\r\n        if (parentIFrames.length > 0) {\r\n            parentIFrames.forEach((parentIFrame) => {\r\n                if (parentIFrame.contentDocument) {\r\n                    var parentIFrameContent =\r\n                        parentIFrame.contentDocument || parentIFrame.contentWindow.document;\r\n                    //console.log(\"parentIFrameContent gefunden:\", parentIFrameContent);\r\n\r\n                    let nestedIFrame = null;\r\n\r\n                    const adjustParentIFrameHeight = () => {\r\n                        setTimeout(() => {\r\n                            console.log(\"adjustParentIFrameHeight\");\r\n\r\n                            if (nestedIFrame && nestedIFrame.contentWindow.document.body) {\r\n                                const nestedIFrameHeight =\r\n                                    nestedIFrame.contentWindow.document.body.scrollHeight;\r\n                                if (nestedIFrameHeight > 1) {\r\n                                    parentIFrame.style.height = nestedIFrameHeight + \"px\";\r\n                                    // console.log(\r\n                                    //     \"ParentIFrame-Höhe angepasst:\",\r\n                                    //     nestedIFrameHeight + \"px\"\r\n                                    // );\r\n                                } else {\r\n                                    //console.log(\"Inhalt noch nicht vollständig gerendert, Höhe nicht angepasst.\");\r\n                                }\r\n                            } else {\r\n                                //console.log(\"Body ist noch nicht verfügbar.\");\r\n                            }\r\n                        }, 100);\r\n                    };\r\n\r\n                    const monitorElementLoads = () => {\r\n                        console.log(\"monitorElementLoads\");\r\n\r\n                        // Überwache das Laden von Bildern, Videos und anderen Medien im iframe\r\n                        const elementsToWatch = ['img', 'video', 'iframe', 'embed', 'object'];\r\n                        elementsToWatch.forEach(tag => {\r\n                            const elements = nestedIFrame.contentDocument.getElementsByTagName(tag);\r\n                            for (let element of elements) {\r\n                                element.addEventListener('load', adjustParentIFrameHeight);\r\n                                element.addEventListener('resize', adjustParentIFrameHeight);\r\n                            }\r\n                        });\r\n                    };\r\n\r\n                    const checkForH5P = () => {\r\n                        console.log(\"checkForH5P\");\r\n                        if (nestedIFrame) {\r\n                            var H5PIntegration = nestedIFrame.contentWindow.H5PIntegration;\r\n                            var H5P = nestedIFrame.contentWindow.H5P;\r\n                            if (H5P && H5P.externalDispatcher) {\r\n                                //console.log(\"H5P-Objekt gefunden.\");\r\n\r\n                                //workaround for problem, that several observer regard the same object\r\n                                function addUniqueH5PcontentId(array, element) {\r\n                                    if (!array.includes(element)) {\r\n                                        array.push(element);\r\n                                    }\r\n                                    return array;\r\n                                }\r\n\r\n                                //array of h5p contentId\r\n\r\n                                H5P.setFinished = function (contentId, score, maxScore, time) {\r\n                                    // H5P-Funktion hijacken, damit die Grade nicht doppelt eingetragen wird\r\n                                };\r\n\r\n                                //H5P.externalDispatcher.on(\"xAPI\", this._hvpprogress.bind(this));\r\n                                //ILD.checkLibrary();\r\n                                //H5P.externalDispatcher.on(\"xAPI\", ILD.xAPIAnsweredListener);\r\n                                if (!h5p_contentIds.includes(H5P.instances[0].contentId)) {\r\n                                    var current_array = addUniqueH5PcontentId(h5p_contentIds, H5P.instances[0].contentId);\r\n                                    ILD.init(H5P, H5PIntegration, this.id, this.reactive);\r\n                                }\r\n                                //window.console.log(H5P);\r\n\r\n                                adjustParentIFrameHeight(); // Höhe sofort anpassen, wenn H5P gefunden wird\r\n\r\n                                // Starte den MutationObserver\r\n                                var observer = new MutationObserver(function (mutations) {\r\n                                    mutations.forEach(function (mutation) {\r\n                                        if (mutation.addedNodes.length > 0 || mutation.attributeName === 'src') {\r\n                                            // console.log(\r\n                                            //     \"DOM-Änderung oder Attributänderung erkannt im .h5p-iframe: \",\r\n                                            //     mutation\r\n                                            // );\r\n                                            adjustParentIFrameHeight(); // Passe die Höhe nach der Mutation oder Attributänderung an\r\n                                        }\r\n                                    });\r\n                                });\r\n\r\n                                observer.observe(nestedIFrame.contentDocument, {\r\n                                    childList: true,\r\n                                    subtree: true,\r\n                                    attributes: true, // Überwacht Änderungen an Attributen wie `src`\r\n                                });\r\n                                // console.log(\r\n                                //     \"MutationObserver wurde gestartet, um Änderungen im .h5p-iframe zu überwachen.\"\r\n                                // );\r\n\r\n                                return true; // H5P wurde gefunden und alles eingerichtet\r\n                            }\r\n                        }\r\n                        return false; // H5P wurde noch nicht gefunden oder nestedIFrame ist nicht verfügbar\r\n                    };\r\n\r\n                    const checkForNestedIFrame = () => {\r\n                        nestedIFrame = parentIFrameContent.querySelector(\".h5p-iframe\");\r\n                        //console.log(\"nestedIFrame gefunden:\", nestedIFrame);\r\n\r\n                        if (nestedIFrame) {\r\n                            // Füge ein 'load' Event hinzu\r\n                            nestedIFrame.addEventListener('load', function () {\r\n                                //console.log('.h5p-iframe vollständig geladen.');\r\n                                adjustParentIFrameHeight(); // Passe die Höhe an, wenn das iframe vollständig geladen ist\r\n                                checkForH5P(); // Prüfe H5P erneut nach dem Laden\r\n                                monitorElementLoads(); // Überwache das Laden von Elementen\r\n                            });\r\n\r\n                            // Fallback: Sofortiger Versuch, H5P zu finden\r\n                            if (!checkForH5P()) {\r\n                                //console.log(\"H5P wurde nicht gefunden, starte Überwachung.\");\r\n\r\n                                // Fallback: Regelmäßige Überprüfung des Inhalts (Polling) für H5P\r\n                                var h5pCheckInterval = setInterval(function () {\r\n                                    if (checkForH5P()) {\r\n                                        clearInterval(h5pCheckInterval); // Stoppe das Intervall, wenn H5P gefunden wurde\r\n                                    }\r\n                                }, 500); // Überprüft alle 500ms\r\n                            }\r\n\r\n                            return true; // nestedIFrame wurde gefunden, keine weitere Aktion erforderlich\r\n                        }\r\n                        return false; // nestedIFrame wurde noch nicht gefunden\r\n                    };\r\n\r\n                    // Initialer Versuch, nestedIFrame zu finden\r\n                    if (!checkForNestedIFrame()) {\r\n                        // console.log(\r\n                        //     \"nestedIFrame wurde nicht gefunden, starte Beobachtung des parentIFrame.\"\r\n                        // );\r\n\r\n                        // Beobachte den parentIFrame für das Erscheinen des nestedIFrame\r\n                        var observer = new MutationObserver(function (mutations) {\r\n                            console.log(\"_hvpListener 7\");\r\n\r\n                            mutations.forEach(function (mutation) {\r\n                                if (mutation.addedNodes.length > 0) {\r\n                                    // console.log(\r\n                                    //     \"Eine neue Node wurde hinzugefügt:\",\r\n                                    //     mutation.addedNodes\r\n                                    // );\r\n                                    if (checkForNestedIFrame()) {\r\n                                        observer.disconnect(); // Stoppe das Beobachten, nachdem nestedIFrame gefunden wurde\r\n                                    }\r\n                                }\r\n                            });\r\n                        });\r\n\r\n                        observer.observe(parentIFrameContent, {\r\n                            childList: true,\r\n                            subtree: true,\r\n                        });\r\n                    }\r\n                } else {\r\n                    //console.error(\"Kein Dokument im parentIFrame gefunden.\");\r\n                }\r\n            });\r\n        } else {\r\n            //console.error(\"Keine parentIFrames gefunden.\");\r\n        }\r\n    }\r\n}\r\n\r\nexport const init = () => {\r\n    // Add component to the section.\r\n    const courseEditor = getCurrentCourseEditor();\r\n    if (courseEditor.supportComponents && courseEditor.isEditing) {\r\n        new HighlightSection({\r\n            element: document.getElementById('page'),\r\n            reactive: courseEditor,\r\n        });\r\n    }\r\n};\r\n\r\n"],"names":["HighlightSection","BaseComponent","create","name","selectors","SETMARKER","REMOVEMARKER","ACTIONTEXT","ICON","classes","HIDE","formatActions","HIGHLIGHT","UNHIGHLIGHT","getWatchers","watch","handler","this","_refreshHighlight","selector","newAction","element","current","affectedAction","getElement","id","dataset","action","actionText","querySelector","swapname","oldText","innerText","icon","swapicon","newIcon","pixHtml","Templates","renderPix","replaceNode","stateReady","state","_hvpListener","h5p_contentIds","parentIFrames","getElements","H5P","length","forEach","parentIFrame","contentDocument","parentIFrameContent","contentWindow","document","nestedIFrame","adjustParentIFrameHeight","setTimeout","console","log","body","nestedIFrameHeight","scrollHeight","style","height","monitorElementLoads","tag","elements","getElementsByTagName","addEventListener","checkForH5P","H5PIntegration","externalDispatcher","setFinished","contentId","score","maxScore","time","includes","instances","array","push","init","reactive","MutationObserver","mutations","mutation","addedNodes","attributeName","observe","childList","subtree","attributes","checkForNestedIFrame","h5pCheckInterval","setInterval","clearInterval","observer","disconnect","courseEditor","supportComponents","isEditing","getElementById"],"mappings":";;;;;;;8KA6BMA,yBAAyBC,wBAK3BC,cAESC,KAAO,kCAEPC,UAAY,CACbC,6CACAC,kDACAC,+BACAC,mBAGCC,QAAU,CACXC,KAAM,eAGLC,cAAgB,CACjBC,UAAW,mBACXC,YAAa,sBASrBC,oBACW,CACH,CAAEC,gCAAkCC,QAASC,KAAKC,uGAWlDC,SACAC,WAFgBC,QAAEA,cAGlBA,QAAQC,SACRH,SAAWF,KAAKb,UAAUC,UAC1Be,UAAYH,KAAKN,cAAcE,cAE/BM,SAAWF,KAAKb,UAAUE,aAC1Bc,UAAYH,KAAKN,cAAcC,iBAG7BW,eAAiBN,KAAKO,qBAAcL,UAAYE,QAAQI,QACzDF,sBAILA,eAAeG,QAAQC,OAASP,gBAC1BQ,WAAaL,eAAeM,cAAcZ,KAAKb,UAAUG,6CAC3DgB,eAAeG,gEAASI,UAAYF,WAAY,OAC1CG,QAAUH,MAAAA,kBAAAA,WAAYI,UAC5BJ,WAAWI,UAAYT,eAAeG,QAAQI,SAC9CP,eAAeG,QAAQI,SAAWC,cAEhCE,KAAOV,eAAeM,cAAcZ,KAAKb,UAAUI,wCACrDe,eAAeG,kEAASQ,UAAYD,KAAM,OACpCE,QAAUZ,eAAeG,QAAQQ,YACnCC,QAAS,OACHC,cAAgBC,mBAAUC,UAAUH,QAAS,2BACzCI,YAAYN,KAAMG,QAAS,IACrCb,eAAeG,QAAQQ,SAAWX,eAAeG,QAAQO,KACzDV,eAAeG,QAAQO,KAAOE,UAU1CK,WAAWC,YACFC,eAGTA,mBACQC,eAAiB,GACjBC,cAAgB3B,KAAK4B,YAAY5B,KAAKb,UAAU0C,KAEhDF,cAAcG,OAAS,GACvBH,cAAcI,SAASC,kBACfA,aAAaC,gBAAiB,KAC1BC,oBACAF,aAAaC,iBAAmBD,aAAaG,cAAcC,aAG3DC,aAAe,WAEbC,yBAA2B,KAC7BC,YAAW,QACPC,QAAQC,IAAI,4BAERJ,cAAgBA,aAAaF,cAAcC,SAASM,KAAM,OACpDC,mBACFN,aAAaF,cAAcC,SAASM,KAAKE,aACzCD,mBAAqB,IACrBX,aAAaa,MAAMC,OAASH,mBAAqB,SAW1D,MAGDI,oBAAsB,KACxBP,QAAQC,IAAI,uBAGY,CAAC,MAAO,QAAS,SAAU,QAAS,UAC5CV,SAAQiB,YACdC,SAAWZ,aAAaJ,gBAAgBiB,qBAAqBF,SAC9D,IAAI5C,WAAW6C,SAChB7C,QAAQ+C,iBAAiB,OAAQb,0BACjClC,QAAQ+C,iBAAiB,SAAUb,8BAKzCc,YAAc,QAChBZ,QAAQC,IAAI,eACRJ,aAAc,KACVgB,eAAiBhB,aAAaF,cAAckB,eAC5CxB,IAAMQ,aAAaF,cAAcN,OACjCA,KAAOA,IAAIyB,mBAAoB,IAa/BzB,IAAI0B,YAAc,SAAUC,UAAWC,MAAOC,SAAUC,SAOnDjC,eAAekC,SAAS/B,IAAIgC,UAAU,GAAGL,WAAY,CAhB3BM,MAiBepC,eAjBRtB,QAiBwByB,IAAIgC,UAAU,GAAGL,UAhBtEM,MAAMF,SAASxD,UAChB0D,MAAMC,KAAK3D,yBAgBX4D,KAAKnC,IAAKwB,eAAgBrD,KAAKQ,GAAIR,KAAKiE,iBAIhD3B,2BAGe,IAAI4B,kBAAiB,SAAUC,WAC1CA,UAAUpC,SAAQ,SAAUqC,WACpBA,SAASC,WAAWvC,OAAS,GAAgC,QAA3BsC,SAASE,gBAK3ChC,iCAKHiC,QAAQlC,aAAaJ,gBAAiB,CAC3CuC,WAAW,EACXC,SAAS,EACTC,YAAY,KAMT,OA9CwBZ,MAAO1D,eAiDvC,GAGLuE,qBAAuB,QACzBtC,aAAeH,oBAAoBtB,cAAc,eAG7CyB,aAAc,IAEdA,aAAac,iBAAiB,QAAQ,WAElCb,2BACAc,cACAL,0BAICK,kBAIGwB,iBAAmBC,aAAY,WAC3BzB,eACA0B,cAAcF,oBAEnB,YAGA,SAEJ,OAIND,uBAAwB,KAMrBI,SAAW,IAAIb,kBAAiB,SAAUC,WAC1C3B,QAAQC,IAAI,kBAEZ0B,UAAUpC,SAAQ,SAAUqC,UACpBA,SAASC,WAAWvC,OAAS,GAKzB6C,wBACAI,SAASC,mBAMzBD,SAASR,QAAQrC,oBAAqB,CAClCsC,WAAW,EACXC,SAAS,wBAajB,WAEVQ,cAAe,0CACjBA,aAAaC,mBAAqBD,aAAaE,eAC3CpG,iBAAiB,CACjBqB,QAASgC,SAASgD,eAAe,QACjCnB,SAAUgB"}